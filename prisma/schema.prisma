// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @unique
  name          String
  email         String      @unique
  articles      Articles[]
  comments      Comments[]
  likes         Likes[]
}

model Articles {
  id              String      @id @unique @default(uuid())
  title           String      
  content         String
  publishStatus   String      @default("draft") //draft, published, archived
  publishedAt     DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  authorId        String      
  author          User        @relation(fields: [authorId], references: [id])
  comments        Comments[]  @relation("ArticleToComments")
  likes           Likes[]     @relation("ArticleToLikes")
}

model Comments {
  id            String       @id @unique @default(uuid())
  content       String
  createdAt    DateTime      @default(now())
  authorId      String        
  author        User         @relation(fields: [authorId], references: [id])
  articleId     String
  article       Articles     @relation("ArticleToComments",fields: [articleId], references: [id], onDelete: Cascade)
}

model Likes {
  id            String        @id @default(uuid())
  userId        String        
  user          User          @relation(fields: [userId], references: [id])
  articleId     String
  article       Articles      @relation("ArticleToLikes",fields: [articleId], references: [id], onDelete: Cascade)
}